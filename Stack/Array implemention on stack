#include<bits/stdc++.h>
using namespace std;
class Stack{
    
      int top;
      int *arr;
      int size;
      public:
      Stack(){
          
          top=-1;
          size=5;
          arr=new int[size];
      }
      void push(int x){
          
          if(top>=size-1){
              cout<<"Stack over flow";
          }
          else{
              top++;
              arr[top]=x;
          }
      }
      int pop(){
          if(top==-1)
          return -1;
          int x=arr[top];
          top--;
          return x;
      }
      int Size(){
          return top+1;
      }
      int Top(){
          return arr[top];
      }
      bool isempty(){
          if(top==-1){
              return true;
          }
          else{
              return false;
          }
      }
      void display(){
          cout<<"My stack is:"<<endl;
          if(top>=0){
              for(int i=top;i>=0;--i){
                  cout<<arr[i]<<endl;
              }
          }
          else{
              cout<<"empty";
          }
      }
};
int main(){
 
     Stack s;
    s.push(1);
    s.push(2);
    s.push(3);
     s.display();
    s.pop();
     s.pop();
    s.pop();
    s.pop();
     //s.display();
     if(s.isempty()==true){
         cout<<"The stack is empty";
     }
     else{
         cout<<"No";
     }
    
    
}
///*********************************************************************************************************************************************************************





#include<bits/stdc++.h>
using namespace std;
int arr[5],size=5,top=-1;
void push(int x){
    if(top>=size-1){
        cout<<"The stack is overflow"<<endl;
    }
    else{
        top++;
        arr[top]=x;
    }
}
int pop(){
    if(top==-1) return -1;
    else{
        int x=arr[top];
        top--;
        return x;
    }
}
int SizeofStack(){
    return top+1;
}
int Topelelement(){
    return arr[top];
}
void display(){
    cout<<"My current stack:"<<endl;
    if(top>=0){
        while(top>=0){
            cout<<arr[top]<<endl;
            top--;
        }
    }
}
int main(){
    
    push(1);
    push(2);
    push(3);
    push(4);
    push(5);
    //push(6);
    pop();
      pop();
    //display();
    cout<<"Size of stack:"<<SizeofStack()<<endl;
      pop();
    cout<<"Topelelement of stack:"<<Topelelement()<<endl;
    display();
    
    
}
