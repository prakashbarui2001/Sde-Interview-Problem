/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    int length(ListNode * n){
        int count=0;
        while(n!=NULL){
            count++;
            n=n->next;
        }
        return count;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        ListNode * p1=headA;
        ListNode * p2=headB;
        int l1=length(p1);
        int l2=length(p2);
        while(l1!=l2){
            if(l1<l2){
                p2=p2->next;
                l1++;
            }
            else{
                p1=p1->next;
                l2++;
            }
        }
        cout<<l1<<" "<<l2;
        
        while(p1!=NULL && p2!=NULL){
            if(p1==p2){
                return p1;
            }
            p1=p1->next;
            p2=p2->next;
        }
        return NULL;
        
    }
};
